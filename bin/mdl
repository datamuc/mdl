#!/usr/bin/env perl

# download rtmp streams
# requires Mojolicious
# usage: mdl url1 url2 ... urlN | sh
# License: Beerware
# Mojo port of https://github.com/Sec42/Scripts/blob/master/mediathek-dl/mediathek-dl.pl

use 5.010;
use strict;
use Mojo::UserAgent;

my $ua = Mojo::UserAgent->new;
for my $url (@ARGV) {
    given ($url) {
        when (/videos.arte.tv/) { print_arte($url) }
        when (/ardmediathek.de/) { print_ard($url) }
        default { warn "dunno what to do with $url" }
    }
}

sub print_ard {
    my $url = shift;
    my $html_dom = $ua->get($url)->res->dom;
    my $name = $html_dom->at('h2')->all_text;
    warn "Title: $name\n";
    $name=~y!0-9a-zA-Z_!_!c;
    $name="ARD-${name}.flv";

    my ($proto,$host,$app,$path);
    for my $s ($html_dom->find('script')->each) {
        next unless $s->text;
        next unless $s->text =~ m!mediaCollection.addMediaStream[^"]*"
            (rtmp)://([^/]*)/([^"]*)/",\s*"(mp4:[^"]*)"!ix;
        ($proto,$host,$app,$path)=($1,$2,$3,$4);
        last;
    };

    unless($proto) {
        warn "cannot find stream url for $url";
        return;
    }

    $path=~s!\.[sm]$!.l!; # Use better stream!

    print_rtmp(
        proto => $proto,
        host => $host,
        app => $app,
        path => $path,
        name => $name,
    )

}

sub print_arte {
    my $url = shift;
    my $html_dom = $ua->get($url)->res->dom;
    my $player = undef;
    my @scripts = $html_dom->find("script")->each(sub {
        $player = $1 if ($_->text =~ /url_player\s*=\s*"([^"]*)/)
    });
    if (!$player) { warn "cannot find player for $url"; return; }

    my $url1 = $html_dom->at('embed')->attrs->{src};
    $url1 =~ s/.*videorefFileUrl=//;
    $url1 =~ s/%(..)/chr hex $1/ge;

    my $xml_dom1 = $ua->get($url1)->res->dom;
    my $url2 = $xml_dom1->at('video[lang="de"]')->attrs->{ref};
    if(!$url2) { warn "cannot find second url for $url"; return; }

    my $xml_dom2 = $ua->get($url2)->res->dom;
    my $id = $xml_dom2->at("video")->attrs->{id};
    my $name = $xml_dom2->at("video name")->text;
    warn "title: $name\n";
    #my $name = $html_dom->at('h2')->all_text;
    $name=~y!0-9a-zA-Z_!_!c;
    $name="ARTE-${name}.${id}.flv";


    my $rtmp = $xml_dom2->at('url[quality="hd"]')->text;
    if (!($rtmp=~ m!(?<proto>rtmp)://(?<host>[^/]*)/(?<app>.*)/(?<path>MP4:.*)!)){
            warn "Can't match URL: $rtmp for $url\n";
            return;
    };

    my ($proto,$host,$app,$path)=($1,$2,$3,$4);

    print_rtmp(
        proto => $+{proto},
        host => $+{host},
        app => $+{app},
        path => $+{path},
        name => $name,
        player => $player,
    )
}

sub print_rtmp {
    my %o = @_;
    if($o{player}) {
        $o{player} = "-W '$o{player}' \\\n";
    }

    print << "CMD";
rtmpdump \\
--protocol '$o{proto}' \\
--host '$o{host}' \\
--app '$o{app}' \\
--playpath '$o{path}' \\
$o{player}--flv '$o{name}'

CMD
}
